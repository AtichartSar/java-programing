import com.google.gson.*;

import java.lang.reflect.Type;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;

public class main {
    public static void main(String []args){
        System.out.println(new Date());

        GsonBuilder gsonBuilder = new GsonBuilder();

        gsonBuilder.registerTypeAdapter(LocalDate.class, new LocalDateDeserializer());

        gsonBuilder.registerTypeAdapter(LocalDateTime.class, new LocalDateTimeDeserializer());

        gsonBuilder.registerTypeAdapter(Date.class, new DateDeserializer());


        Gson gson = gsonBuilder.setPrettyPrinting().create();
        String orderJson = "{\r\n" + "  \"id\": 100,\r\n"
                + "  \"orderName\": \"Book purchase\",\r\n" +
                "  \"orderDesc\": \"Java Head First\",\r\n"
                + "  \"orderCreatedDate\": \"26-Oct-2018\",\r\n" +
                "  \"orderCreatedDateTime\": \"26::Oct::2018 11::09::05\",\r\n" +
                "  \"orderCreatedZonedDateTime\": \"Oct 26 2018  11:09 AM\",\r\n" +
                "  \"create\":1577286703230  \r\n" + "}";


        System.out.println(gson.fromJson(orderJson,Order.class));
    }

}


class DateDeserializer implements JsonDeserializer <Date>{
    @Override
    public Date deserialize(JsonElement json, Type typeOfT,
                            JsonDeserializationContext context)
            throws JsonParseException {
        return json == null ? null : new Date(json.getAsJsonPrimitive().getAsLong());
    }
}

class LocalDateDeserializer implements JsonDeserializer < LocalDate > {
    @Override
    public LocalDate deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
            throws JsonParseException {
        return LocalDate.parse(json.getAsString(),
                DateTimeFormatter.ofPattern("dd-MMM-yyyy").withLocale(Locale.ENGLISH));
    }
}

class LocalDateTimeDeserializer implements JsonDeserializer < LocalDateTime > {
    @Override
    public LocalDateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
            throws JsonParseException {
        return LocalDateTime.parse(json.getAsString(),
                DateTimeFormatter.ofPattern("dd::MMM::uuuu HH::mm::ss").withLocale(Locale.ENGLISH));
    }}
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;

public class Order {
    private int id;
    private String orderName;
    private String orderDesc;
    private LocalDate orderCreatedDate;
    private LocalDateTime orderCreatedDateTime;
    private Date create;

    public Date getCreate() {
        return create;
    }

    public void setCreate(Date create) {
        this.create = create;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getOrderName() {
        return orderName;
    }

    public void setOrderName(String orderName) {
        this.orderName = orderName;
    }

    public String getOrderDesc() {
        return orderDesc;
    }

    public void setOrderDesc(String orderDesc) {
        this.orderDesc = orderDesc;
    }

    public LocalDate getOrderCreatedDate() {
        return orderCreatedDate;
    }

    public void setOrderCreatedDate(LocalDate orderCreatedDate) {
        this.orderCreatedDate = orderCreatedDate;
    }

    public LocalDateTime getOrderCreatedDateTime() {
        return orderCreatedDateTime;
    }

    public void setOrderCreatedDateTime(LocalDateTime orderCreatedDateTime) {
        this.orderCreatedDateTime = orderCreatedDateTime;
    }

    @Override
    public String toString() {
        return "Order [id=" + id + ", orderName=" + orderName + ", orderDesc=" + orderDesc + ", orderCreatedDate=" +
                orderCreatedDate + ", orderCreatedDateTime=" + orderCreatedDateTime + "]"+"create :"+create;
    }
}
